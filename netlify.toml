
[build]
  publish = "dist"
  command = "npm run build"

# ✅ OPTIMISATION PERFORMANCE : Cache optimisé pour blog avec images changeantes
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    
# ✅ OPTIMISATION LCP : Images du blog - cache plus long avec versioning
[[headers]]
  for = "*.webp"
  [headers.values]
    Cache-Control = "public, max-age=2592000, stale-while-revalidate=86400"
    
[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=2592000, stale-while-revalidate=86400"
    
[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=2592000, stale-while-revalidate=86400"

# ✅ OPTIMISATION PERFORMANCE : Polices avec cache long    
[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    
[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# ✅ OPTIMISATION PERFORMANCE : Headers de sécurité et performance optimisés
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self' https:; img-src 'self' https: data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tiny.cloud; style-src 'self' 'unsafe-inline' https:; font-src 'self' https:; connect-src 'self' https:; upgrade-insecure-requests"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
# ✅ OPTIMISATION PERFORMANCE : Compression automatique + preload headers
[[headers]]
  for = "/"
  [headers.values]
    Link = "</assets/fonts/inter.woff2>; rel=preload; as=font; type=font/woff2; crossorigin, </assets/fonts/playfair.woff2>; rel=preload; as=font; type=font/woff2; crossorigin"

# Sitemap via fonction propre pour éviter injection script
[[redirects]]
  from = "/sitemap.xml"
  to = "/.netlify/functions/sitemap-clean"
  status = 200
  headers = {Content-Type = "application/xml"}

# Redirection SPA (doit être en dernier)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
