# Script de d√©ploiement MANUEL sur GitHub Pages
# Usage: PowerShell -ExecutionPolicy Bypass -File scripts/deploy-manual.ps1

param(
    [switch]$Force,
    [switch]$Preview
)

Write-Host "üöÄ === D√âPLOIEMENT MANUEL GITHUB PAGES ===" -ForegroundColor Cyan
Write-Host "üìÅ Projet: emergence-blog-novahypnose" -ForegroundColor Gray
Write-Host "‚è∞ Date: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" -ForegroundColor Gray
Write-Host ""

# V√©rification du r√©pertoire
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erreur: Ex√©cutez ce script depuis la racine du projet" -ForegroundColor Red
    exit 1
}

# V√©rification Git
try {
    $gitStatus = git status --porcelain
    if ($gitStatus -and -not $Force) {
        Write-Host "‚ö†Ô∏è  Attention: Des fichiers non commit√©es d√©tect√©s" -ForegroundColor Yellow
        Write-Host "Fichiers modifi√©s:" -ForegroundColor Yellow
        git status --short
        Write-Host ""
        Write-Host "Options:" -ForegroundColor White
        Write-Host "1. Commiter vos changements d'abord" -ForegroundColor Gray
        Write-Host "2. Utiliser -Force pour d√©ployer quand m√™me" -ForegroundColor Gray

        if (-not $Force) {
            $response = Read-Host "Continuer quand m√™me ? (y/N)"
            if ($response -ne "y" -and $response -ne "Y") {
                Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
                exit 1
            }
        }
    }
} catch {
    Write-Host "‚ùå Erreur Git: $_" -ForegroundColor Red
    exit 1
}

# V√©rification branche
try {
    $currentBranch = git branch --show-current
    Write-Host "üìã Branche actuelle: $currentBranch" -ForegroundColor White

    if ($currentBranch -ne "main") {
        Write-Host "‚ö†Ô∏è  Attention: Vous n'√™tes pas sur la branche 'main'" -ForegroundColor Yellow
        $response = Read-Host "Continuer quand m√™me ? (y/N)"
        if ($response -ne "y" -and $response -ne "Y") {
            Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
            exit 1
        }
    }
} catch {
    Write-Host "‚ùå Erreur v√©rification branche: $_" -ForegroundColor Red
    exit 1
}

# Mode Preview
if ($Preview) {
    Write-Host "üëÅÔ∏è  === MODE PREVIEW ===" -ForegroundColor Yellow
    Write-Host "Simulation du d√©ploiement (aucune action r√©elle)" -ForegroundColor Yellow
    Write-Host ""

    Write-Host "√âtapes qui seraient ex√©cut√©es:" -ForegroundColor White
    Write-Host "1. ‚úÖ Build local du projet" -ForegroundColor Green
    Write-Host "2. ‚úÖ Push des changements sur GitHub" -ForegroundColor Green
    Write-Host "3. ‚úÖ D√©clenchement manuel GitHub Actions" -ForegroundColor Green
    Write-Host "4. ‚úÖ D√©ploiement sur GitHub Pages" -ForegroundColor Green
    Write-Host ""
    Write-Host "Pour un d√©ploiement r√©el, relancez sans -Preview" -ForegroundColor White
    exit 0
}

# Test build local
Write-Host "üîß Test du build local..." -ForegroundColor Cyan
try {
    npm run build | Out-Null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Build local r√©ussi" -ForegroundColor Green
    } else {
        Write-Host "‚ùå √âchec du build local" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erreur build: $_" -ForegroundColor Red
    exit 1
}

# Confirmation finale
Write-Host ""
Write-Host "üéØ === CONFIRMATION D√âPLOIEMENT ===" -ForegroundColor Yellow
Write-Host "Cette action va:" -ForegroundColor White
Write-Host "‚Ä¢ Pousser le code sur GitHub" -ForegroundColor Gray
Write-Host "‚Ä¢ D√©clencher le d√©ploiement sur GitHub Pages" -ForegroundColor Gray
Write-Host "‚Ä¢ Rendre le site public sur: https://ittanez.github.io/emergence-blog-novahypnose/" -ForegroundColor Gray
Write-Host ""

$confirmation = Read-Host "Confirmer le d√©ploiement ? Tapez 'DEPLOY' pour continuer"
if ($confirmation -ne "DEPLOY") {
    Write-Host "‚ùå D√©ploiement annul√© (confirmation incorrecte)" -ForegroundColor Red
    exit 1
}

# Push sur GitHub
Write-Host ""
Write-Host "üì§ Push sur GitHub..." -ForegroundColor Cyan
try {
    git push origin $currentBranch
    Write-Host "‚úÖ Code pouss√© sur GitHub" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur push GitHub: $_" -ForegroundColor Red
    exit 1
}

# Instructions pour d√©clenchement manuel
Write-Host ""
Write-Host "üéØ === D√âCLENCHEMENT MANUEL REQUIS ===" -ForegroundColor Yellow
Write-Host ""
Write-Host "√âtapes suivantes √† faire sur GitHub.com:" -ForegroundColor White
Write-Host ""
Write-Host "1. Aller sur: https://github.com/ittanez/emergence-blog-novahypnose/actions" -ForegroundColor Cyan
Write-Host "2. Cliquer sur 'Deploy to GitHub Pages' (workflow)" -ForegroundColor Cyan
Write-Host "3. Cliquer sur 'Run workflow' (bouton bleu)" -ForegroundColor Cyan
Write-Host "4. Dans le champ, taper exactement: DEPLOY" -ForegroundColor Cyan
Write-Host "5. Cliquer 'Run workflow'" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚è∞ Le d√©ploiement prendra 2-5 minutes" -ForegroundColor Yellow
Write-Host "üåê Site final: https://ittanez.github.io/emergence-blog-novahypnose/" -ForegroundColor Green
Write-Host ""
Write-Host "‚úÖ Script termin√© avec succ√®s!" -ForegroundColor Green

# Optionnel: Ouvrir GitHub dans le navigateur
$openGitHub = Read-Host "Ouvrir GitHub Actions dans le navigateur ? (y/N)"
if ($openGitHub -eq "y" -or $openGitHub -eq "Y") {
    Start-Process "https://github.com/ittanez/emergence-blog-novahypnose/actions"
}